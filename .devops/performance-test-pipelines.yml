# azure-pipelines.yml
trigger: none

parameters:
  - name: "ENVIRONMENT"
    displayName: "Environment"
    type: string
    values:
      - "dev"
      - "uat"
    default: "uat"
  - name: "TEST_TYPE"
    displayName: "Test type"
    type: string
    values:
      - "constant"
      - "load"
      - "spike"
      - "stress"
    default: "constant"
  - name: "SCRIPT"
    displayName: "Script name"
    type: string
    values:
      - receipt_generator
  - name: "DB_NAME"
    displayName: "DB name"
    type: string
    values:
      - pagopa_receipt_pdf_generatork6
  - name: "PROCESS_TIME"
    displayName: "Process time"
    type: number
    default: 5

variables:
  ${{ if eq(parameters['ENVIRONMENT'], 'dev') }}:
    receiptCosmosSubscriptionKey: "$(DEV_RECEIPT_COSMOS_DB_SUBSCRIPTION_KEY)"
    receiptQueueAccountName: "pagopadweureceiptsfnsa"
    receiptQueueName: "pagopa-d-weu-receipts-queue-receipt-waiting-4-gen"
    azureSubscription: "$(TF_DEV_AZURE_SERVICE_CONNECTION)"
    poolImage: "pagopa-dev-loadtest-linux"
  ${{ if eq(parameters['ENVIRONMENT'], 'uat') }}:
    receiptCosmosSubscriptionKey: "$(UAT_RECEIPT_COSMOS_DB_SUBSCRIPTION_KEY)"
    receiptQueueAccountName: "pagopauweureceiptsfnsa"
    receiptQueueName: "pagopa-u-weu-receipts-queue-receipt-waiting-4-gen"
    azureSubscription: "$(TF_UAT_AZURE_SERVICE_CONNECTION)"
    poolImage: "pagopa-uat-loadtest-linux"

pool:
  name: $(poolImage)

steps:
  - script: |
      cd ./performance-test/src
      docker pull grafana/k6
    displayName: Pull k6 image
  - script: |
      apt-get update
      apt-get install azure-cli
      az version
    displayName: Install Azure CLI
  - task: AzureCLI@2
    displayName: Login Azure
    inputs:
      azureSubscription: "$(azureSubscription)"
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        end="$(date -d '+1 day' +'%Y-%m-%d')"
        export SAS_TOKEN="$(az storage queue generate-sas \
        -n ${{ variables.receiptQueueName }} \
        --account-name ${{ variables.receiptQueueAccountName }} \
        --permissions apru \
        --expiry $end)"
        echo "##vso[task.setvariable variable=SAS_TOKEN]$SAS_TOKEN"
  - script: |
      cd ./performance-test
      sh ./run_performance_test.sh ${{ parameters.ENVIRONMENT }} ${{ parameters.TEST_TYPE }} ${{ parameters.SCRIPT }} ${{ parameters.DB_NAME }} $(SAS_TOKEN) $RECEIPT_COSMOS_SUBSCRIPTION_KEY $PROCESS_TIME
    displayName: Run k6 ${{ parameters.SCRIPT }} on ${{ parameters.ENVIRONMENT }}
    env:
      RECEIPT_COSMOS_SUBSCRIPTION_KEY: ${{ variables.receiptCosmosSubscriptionKey }}
      PROCESS_TIME: ${{ parameters.PROCESS_TIME }}
