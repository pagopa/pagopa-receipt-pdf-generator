# azure-pipelines.yml
trigger: none

parameters:
  - name: "ENVIRONMENT"
    displayName: "Environment"
    type: string
    values:
      - "dev"
      - "uat"
    default: "uat"
  - name: "TEST_TYPE"
    displayName: "Test type"
    type: string
    values:
      - "constant"
      - "load"
      - "spike"
      - "stress"
    default: "constant"
  - name: "SCRIPT"
    displayName: "Script name"
    type: string
    values:
      - receipt_generator
  - name: "DB_NAME"
    displayName: "DB name"
    type: string
    values:
      - pagopa_receipt_pdf_generatork6

variables:
  ${{ if eq(parameters['ENVIRONMENT'], 'dev') }}:
    receiptCosmosSubscriptionKey: "$(DEV_RECEIPT_COSMOS_DB_SUBSCRIPTION_KEY)"
    receiptQueueAccountName: "pagopadweureceiptsfnsa"
    receiptQueueName: "pagopa-d-weu-receipts-queue-receipt-waiting-4-gen"
    azureSubscription: '$(TF_DEV_AZURE_SERVICE_CONNECTION)'
    poolImage: "pagopa-dev-loadtest-linux"
  ${{ if eq(parameters['ENVIRONMENT'], 'uat') }}:
    receiptCosmosSubscriptionKey: "$(UAT_RECEIPT_COSMOS_DB_SUBSCRIPTION_KEY)"
    receiptQueueAccountName: "pagopauweureceiptsfnsa"
    receiptQueueName: "pagopa-u-weu-receipts-queue-receipt-waiting-4-gen"
    azureSubscription: '$(TF_UAT_AZURE_SERVICE_CONNECTION)'
    poolImage: "pagopa-uat-loadtest-linux"

pool:
  name: $(poolImage)

steps:
  - script: |
      cd ./performance-test/src
      docker pull grafana/k6
    displayName: Pull k6 image
  - script: |
      sudo rm -rf /etc/apt/trusted.gpg.d/microsoft.gpg 
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B53DC80D13EDEF05 
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EB3E94ADBE1229CF
      sudo apt-get update
      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    displayName: Install Azure CLI
  - task: AzureCLI@2
    displayName: Login Azure
    inputs:
      azureSubscription: "$(azureSubscription)"
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        SAS_TOKEN = "$(az storage container generate-sas \
          --account-name ${{ variables.receiptQueueAccountName }} \
          --name ${{ variables.receiptQueueName }} \
          --permissions acdlrw \
          --expiry "$(date -d '+1 day' +'%Y-%m-%d")' \
          --auth-mode login \
          --as-user)"
  - script: |
      cd ./performance-test
      sh ./run_performance_test.sh ${{ parameters.ENVIRONMENT }} ${{ parameters.TEST_TYPE }} ${{ parameters.SCRIPT }} ${{ parameters.DB_NAME }} "$(SAS_TOKEN)" $RECEIPT_COSMOS_SUBSCRIPTION_KEY
    displayName: Run k6 ${{ parameters.SCRIPT }} on ${{ parameters.ENVIRONMENT }}
    env:
      RECEIPT_QUEUE_SUBSCRIPTION_KEY: ${{ variables.receiptQueueSubscriptionKey }}
      RECEIPT_COSMOS_SUBSCRIPTION_KEY: ${{ variables.receiptCosmosSubscriptionKey }}
